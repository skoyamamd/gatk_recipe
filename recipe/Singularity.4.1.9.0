Bootstrap: docker
From: broadinstitute/gatk:gatkbase-2.3.0
Stage: gradleBuild

%files
. /gatk
%files from gradleBuild
/gatk/unzippedJar .
%labels
stage=gatkIntermediateBuildImage
%post
# stage 1 for constructing the GATK zip

ls .
cd /gatk

add-apt-repository universe && apt update
apt-get --assume-yes install git-lfs
git lfs install

git lfs pull

export GRADLE_OPTS="-Xmx4048m -Dorg.gradle.daemon=false" && /gatk/gradlew clean collectBundleIntoDir shadowTestClassJar shadowTestJar -Drelease=$RELEASE
cp -r $( find /gatk/build -name "*bundle-files-collected" )/ /gatk/unzippedJar/
unzip -o -j $( find /gatk/unzippedJar -name "gatkPython*.zip" ) -d /gatk/unzippedJar/scripts

# Using OpenJDK 8

cd /gatk

# Location of the unzipped gatk bundle files

#Setup linked jars that may be needed for running gatk
ln -s $( find /gatk -name "gatk*local.jar" ) gatk.jar
ln -s $( find /gatk -name "gatk*local.jar" ) /root/gatk.jar
ln -s $( find /gatk -name "gatk*spark.jar" ) gatk-spark.jar

cd /root

 # Make sure we can see a help message
java -jar gatk.jar -h
mkdir /gatkCloneMountPoint
mkdir /jars
mkdir .gradle

cd /gatk

# Create a simple unit test runner
CI=true
echo "source activate gatk" > /root/run_unit_tests.sh && \
echo "export GATK_DOCKER_CONTAINER=true" >> /root/run_unit_tests.sh && \
echo "export TEST_JAR=\$( find /jars -name \"gatk*test.jar\" )" >> /root/run_unit_tests.sh && \
echo "export TEST_DEPENDENCY_JAR=\$( find /jars -name \"gatk*testDependencies.jar\" )" >> /root/run_unit_tests.sh && \
echo "export GATK_JAR=$( find /gatk -name "gatk*local.jar" )" >> /root/run_unit_tests.sh && \
echo "export GATK_LAUNCH_SCRIPT=/gatk/gatk" >> /root/run_unit_tests.sh && \
echo "mkdir /gatk/srcdir" >> /root/run_unit_tests.sh && \
echo "cp -rp /gatkCloneMountPoint/src/main/java/* /gatk/srcdir" >> /root/run_unit_tests.sh && \
echo "export SOURCE_DIR=/gatk/srcdir" >> /root/run_unit_tests.sh && \
echo "export GRADLE_OPTS=\"-Xmx1024m -Dorg.gradle.daemon=false\"" /root/run_unit_tests.sh && \
echo "export CP_DIR=/gatk/testClasses" /root/run_unit_tests.sh && \
echo "ln -s /gatkCloneMountPoint/src/ /gatkCloneMountPoint/scripts/docker/src" >> /root/run_unit_tests.sh && \
echo "ln -s /gatkCloneMountPoint/build/ /gatkCloneMountPoint/scripts/docker/build" >> /root/run_unit_tests.sh && \
echo "cd /gatk/ && /gatkCloneMountPoint/gradlew -b /gatkCloneMountPoint/dockertest.gradle testOnPackagedReleaseJar jacocoTestReportOnPackagedReleaseJar -a -p /gatkCloneMountPoint" >> /root/run_unit_tests.sh

cd /root
cp -r /root/run_unit_tests.sh /gatk
cp -r gatk.jar /gatk
CLASSPATH=/gatk/gatk.jar:$CLASSPATH

# Start GATK Python environment

cd /gatk
chmod -R a+rw /gatk
PATH=$CONDA_PATH/envs/gatk/bin:$CONDA_PATH/bin:$PATH
conda env create -n gatk -f /gatk/gatkcondaenv.yml && \
echo "source activate gatk" >> /gatk/gatkenv.rc && \
echo "source /gatk/gatk-completion.sh" >> /gatk/gatkenv.rc && \
conda clean -afy && \
find /opt/miniconda/ -follow -type f -name '*.a' -delete && \
find /opt/miniconda/ -follow -type f -name '*.pyc' -delete && \
rm -rf /root/.cache/pip


# End GATK Python environment

PATH=/gatk:$PATH
%environment
export CI=true
export CLASSPATH=/gatk/gatk.jar:$CLASSPATH
export PATH=$CONDA_PATH/envs/gatk/bin:$CONDA_PATH/bin:$PATH
export PATH=/gatk:$PATH
%runscript
cd /gatk
exec /bin/bash bash --init-file /gatk/gatkenv.rc "$@"
%startscript
cd /gatk
exec /bin/bash bash --init-file /gatk/gatkenv.rc "$@"
